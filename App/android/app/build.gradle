plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// .env 파일에서 환경 변수 읽기
def envFile = file('../../.env')
def envMap = [:]

if (envFile.exists()) {
    envFile.eachLine { line ->
        def (key, value) = line.split('=', 2)
        if (key && value) {
            envMap[key] = value
        }
    }
}

android {
    namespace = "com.example.neulbo"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.neulbo"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        // 환경 변수를 AndroidManifest.xml에 주입
        manifestPlaceholders = [
            KAKAO_NATIVE_APP_KEY: envMap.get('KAKAO_NATIVE_APP_KEY', ''),
            NAVER_CLIENT_ID: envMap.get('NAVER_CLIENT_ID', '')
        ]
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
